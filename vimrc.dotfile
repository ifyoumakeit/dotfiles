" vim:foldmethod=marker:foldlevel=0

"- Plugins {{{
set nocompatible " do not abide Vi compatibility
filetype plugin on
call plug#begin()
Plug 'airblade/vim-gitgutter'
Plug 'christoomey/vim-tmux-navigator'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'junegunn/goyo.vim'
Plug 'pangloss/vim-javascript'
Plug 'rking/ag.vim'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-vinegar'
call plug#end()
" }}}

"- Colors {{{
" }}}

"- Syntax Highlighting {{{
syntax enable " enbable syntax highlighting
highlight Comment cterm=italic
"}}}

"- Spaces and Tabs {{{
set expandtab " tabs are spaces
set shiftwidth=2 " number of columns indented (>>) or outdented (<<)
set softtabstop=2 " number of spaces in tab when editing
set tabstop=2 " number of visual spaces per TAB
set shiftround " When at 3 spaces and I hit >>, go to 4, not 5.
set nojoinspaces " use 1 space after punctuation, not 2
" }}}

"- UI Config {{{
set laststatus=2 " Always show status line.
set list " show hidden characters
set listchars=trail:â€¢ " define which hidden characters to show
set number " show line numbers
set numberwidth=4 " Add gutter to number column
set relativenumber " also show line number relative to cursor
set ruler "show line (row/column) info
set showmatch " highlight matching delimeters
set splitbelow " Always split panes to right
set splitright " Always split panes to bottom
set wildmenu " visual autocomplete for command menu
" }}}

"- Editorconfig {{{
let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']
" }}}

"- Searching {{{
set hlsearch " highlight matches
set ic " perform case insensitive searches
set incsearch " search as characters are entered

if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif
" }}}

"- General Config {{{
set backspace=indent,eol,start  " allow backspacing over everything in insert mode
set gdefault " assume the /g flag on :s substitutions to replace all matches in a line
set hidden
set history=50
set nobackup
set nofoldenable " Say no to code folding...
set noswapfile " don't create swp files
set nowritebackup
" }}}

"- Movement {{{
" j/k individual lines in paragraph block instead of the entire block
nnoremap k gk
nnoremap j gj
nnoremap 0 g^
nnoremap $ g$
inoremap jk <esc>
inoremap kj <esc>

" Quicker window movement w/tmux
let g:tmux_navigator_no_mappings = 1
nnoremap <silent> <C-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <C-j> :TmuxNavigateDown<cr>
nnoremap <silent> <C-k> :TmuxNavigateUp<cr>
nnoremap <silent> <C-l> :TmuxNavigateRight<cr>
" }}}

"- Leader/Leader bindings {{{
let mapleader = "\<Space>" " <leader> is space
nnoremap <leader>a :Ag
nnoremap <leader>b :ls<CR>:b
nnoremap <leader>ev :vsp $MYVIMRC<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>
nnoremap <leader>z :Goyo<CR>
" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>
" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>
" }}}

"- Commands {{{
command! -nargs=* Wrap set wrap linebreak nolist
"}}}

"- Autogroups {{{
autocmd! BufReadPost *vimrc setlocal foldenable modelines=1
" }}}
